# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  config:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      environment: ${{ steps.environment.outputs.result }}
      message: ${{ steps.message.outputs.test }}
    steps:
      - uses: actions/github-script@v7
        id: environment
        with:
          script: |
            console.log(github.ref)
            if (github.ref !== 'refs/heads/main') {
            
            return 'ephemeral';
            }
            if (github.ref === 'refs/heads/main') {
              return 'dev';
            }  
          result-encoding: string   
              
      - id: message
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy: 
      matrix: 
        node-version: 
          - 16.x
          - 18.x
          - 20.x
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Setup nodejs ${{matrix.node-version}} on ${{matrix.os}}
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  deploy: 
    runs-on: ubuntu-latest
    needs: [config, build]
    environment: ${{ needs.config.outputs.environment }}
    steps:
      - name: print url var 
        run: echo ${{ vars.url }}
        
    
  cat:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Feed the cat
        run: echo Meow
        
  
